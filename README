GNU Autotools are required for building the project.

To initially configure the working dir, run:
$autoreconf --install

If successfull, this will generate the ./configure script.
To generate the Makefile, run:
$./configure

Autotools by default enable several options for the ./configure script.
To see the list of all available options (depends on the local environment), run:
$./configure -h

There are two options manually configured in the ./configure.ac file:
  --enable-valgrind       Use valgrind when running unit tests.
  --enable-coverage       Enable tests coverage statistics.

E.g. To enable the gcov code coevrage statistics, generate the Makefile by running:
$./configure --enable-coverage

There would be many Makefile targets defined by autotools,
but only few of them are important for sartup.

To build the project, run:
$ make

This will build the project and generate the ./libclumsy.la library.
To run the static analizer (only if splint is available on the system), run:
$ make analyze FILES="src/clumsy.h"

Or
$ make analyze

The later will analyze all the source files placed under ./src 
and its subdirectories, except unit tests placed under ./src/tests.
To run the unit tests, run:
$make check

This will build the unit tests, and link them against the ./libclumsy.la.
If valgrind was enabled, runtime memory profiling would be done.

The clumsy code follows the linux codig quidelines.
To fix the code style (only if indent is available on the system), run:
$ make indent FILES="src/clumsy.h"

Or
$ make indent

The later will autoindent all source files placed under ./src
and its subdirectories that are curently not under version controll.

Finaly, to COMPLETLY clean the project, including the files generated by autotools, run:
$make autoclean
